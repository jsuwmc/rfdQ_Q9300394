    1 00:0000 -  -  -  -  #include "ti84pce.inc"
Listing for file "/home/jacob/Programming/calc/ez80/CEmu/tests/ports/ti84pce.inc"
    1 00:0000 -  -  -  -  ;TI-84 Plus CE Include File
    2 00:0000 -  -  -  -  
    3 00:0000 -  -  -  -  ;Various Parts Contributed by
    4 00:0000 -  -  -  -  ;- BrandonW
    5 00:0000 -  -  -  -  ;- calc84
    6 00:0000 -  -  -  -  ;- MateoConLechuga
    7 00:0000 -  -  -  -  ;- Runer112
    8 00:0000 -  -  -  -  ;- tr1p1ea
    9 00:0000 -  -  -  -  ;- Kerm Martian
   10 00:0000 -  -  -  -  ;- Texas Instruments (ti83plus.inc)
Listing for file "ports.ez80"
    2 00:0000 -  -  -  -  heapTop                 equ 0D1987Ch
    3 00:0000 -  -  -  -  
    4 00:0000 EF 7B -  -  	.db	tExtTok, tAsm84CeCmp
    5 00:0002 -  -  -  -  	.org	userMem
    6 D1:A881 -  -  -  -  
    7 D1:A881 F3 -  -  -  	di
    8 D1:A882 3E D1 -  -  	ld	a, $d1
    9 D1:A884 ED 6D -  -  	ld	mb, a
   10 D1:A886 40 31 7C 98 	ld.sis	sp, heapTop - $d10000
   11 D1:A88A 40 C3 8E A8 	jp.sis	loop
   12 D1:A88E -  -  -  -  	.assume	adl = 0
   13 D1:A88E -  -  -  -  	.org	$ - $d10000
   14 00:A88E 52 CD 9B A8 
              D1 -  -  -  loop:	call.il	rand
   15 00:A893 4D -  -  -  	ld	c, l
   16 00:A894 44 -  -  -  	ld	b, h
   17 00:A895 ED 78 -  -          in      a, (bc)
   18 00:A897 ED 79 -  -          out     (bc), a
   19 00:A899 18 F3 -  -  	jr	loop
   20 00:A89B -  -  -  -  	.org	$ + $d10000
   21 D1:A89B -  -  -  -  	.assume	adl = 1
   22 D1:A89B -  -  -  -  ; euhl = rand
   23 D1:A89B F5 -  -  -  rand:	push	af
   24 D1:A89C C5 -  -  -  	push	bc
   25 D1:A89D DD 21 EF A8 
              D1 -  -  -  	ld	ix, seed
   26 D1:A8A2 ED 22 07 -  	lea	hl, ix + x
   27 D1:A8A5 ED 12 03 -  	lea	de, ix + t
   28 D1:A8A8 01 10 00 00 	ld	bc, 4 * 4
   29 D1:A8AC ED B0 -  -  	ldir
   30 D1:A8AE DD 27 03 -  	ld	hl, (ix + t)
   31 D1:A8B1 29 -  -  -  	add	hl, hl
   32 D1:A8B2 29 -  -  -  	add	hl, hl
   33 D1:A8B3 29 -  -  -  	add	hl, hl
   34 D1:A8B4 DD 07 04 -  	ld	bc, (ix + t + 1)
   35 D1:A8B7 CD 98 01 00 	call	__ixor
   36 D1:A8BB DD 2F 04 -  	ld	(ix + t + 1), hl
   37 D1:A8BE DD 07 03 -  	ld	bc, (ix + t)
   38 D1:A8C1 CD 98 01 00 	call	__ixor
   39 D1:A8C5 DD 2F 03 -  	ld	(ix + t), hl
   40 D1:A8C8 DD 17 15 -  	ld	de, (ix + w + 2)
   41 D1:A8CB 7B -  -  -  	ld	a, e
   42 D1:A8CC 5A -  -  -  	ld	e, d
   43 D1:A8CD CB 3A -  -  	srl	d
   44 D1:A8CF 1F -  -  -  	rra
   45 D1:A8D0 CB 3A -  -  	srl	d
   46 D1:A8D2 1F -  -  -  	rra
   47 D1:A8D3 CB 3A -  -  	srl	d
   48 D1:A8D5 1F -  -  -  	rra
   49 D1:A8D6 DD 07 13 -  	ld	bc, (ix + w)
   50 D1:A8D9 A9 -  -  -  	xor	a, c
   51 D1:A8DA 4F -  -  -  	ld	c, a
   52 D1:A8DB 7A -  -  -  	ld	a, d
   53 D1:A8DC A8 -  -  -  	xor	a, b
   54 D1:A8DD 47 -  -  -  	ld	b, a
   55 D1:A8DE DD 7E 06 -  	ld	a, (ix + t + 3)
   56 D1:A8E1 CD FC 01 00 	call	__lxor
   57 D1:A8E5 DD 2F 13 -  	ld	(ix + w), hl
   58 D1:A8E8 DD 73 16 -  	ld	(ix + w + 3), e
   59 D1:A8EB C1 -  -  -  	pop	bc
   60 D1:A8EC F1 -  -  -  	pop	af
   61 D1:A8ED 5B C9 -  -  	ret.l
   62 D1:A8EF -  -  -  -  
   63 D1:A8EF -  -  -  -  seed:	.org	0
   64 00:0000 00 00 00 -  s:	.block	3
   65 00:0003 00 00 00 00 t:	.block	4
   66 00:0007 6C D6 21 FB x:	.db	$6c, $d6, $21, $fb
   67 00:000B F2 A3 85 6B y:	.db	$f2, $a3, $85, $6b
   68 00:000F 4D 0E DF B2 z:	.db	$4d, $0e, $df, $b2
   69 00:0013 73 EB E1 1C w:	.db	$73, $eb, $e1, $1c
